!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/380fa1c7/
$(VERBOSE).SILENT	build/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	build/example/Makefile	/^$(VERBOSE).SILENT:$/;"	t
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID$/;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID$/;"	d	file:
BUILD_SHARED_LIBS	CMakeLists.txt	/^OPTION(BUILD_SHARED_LIBS "Build shared libraries" ON)$/;"	D
CJSON_EXPORT_SYMBOLS	src/cJSON.h	/^#define CJSON_EXPORT_SYMBOLS$/;"	d
CJSON_NESTING_LIMIT	src/cJSON.h	/^#define CJSON_NESTING_LIMIT /;"	d
CJSON_PUBLIC	src/cJSON.h	/^#define CJSON_PUBLIC(/;"	d
CJSON_VERSION_MAJOR	src/cJSON.h	/^#define CJSON_VERSION_MAJOR /;"	d
CJSON_VERSION_MINOR	src/cJSON.h	/^#define CJSON_VERSION_MINOR /;"	d
CJSON_VERSION_PATCH	src/cJSON.h	/^#define CJSON_VERSION_PATCH /;"	d
CMAKE_AR	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_AR "\/usr\/bin\/ar")$/;"	v
CMAKE_AR	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_AR "\/usr\/bin\/ar")$/;"	v
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/home\/liwenchao\/git\/dataformatpp\/build$/;"	m
CMAKE_BINARY_DIR	build/example/Makefile	/^CMAKE_BINARY_DIR = \/home\/liwenchao\/git\/dataformatpp\/build$/;"	m
CMAKE_BUILD_TYPE	CMakeLists.txt	/^SET(CMAKE_BUILD_TYPE "Debug")$/;"	v
CMAKE_C11_COMPILE_FEATURES	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C11_COMPILE_FEATURES "c_std_11;c_static_assert")$/;"	v
CMAKE_C90_COMPILE_FEATURES	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C90_COMPILE_FEATURES "c_std_90;c_function_prototypes")$/;"	v
CMAKE_C99_COMPILE_FEATURES	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C99_COMPILE_FEATURES "c_std_99;c_restrict;c_variadic_macros")$/;"	v
CMAKE_CL_SHOWINCLUDES_PREFIX	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_C_CL_SHOWINCLUDES_PREFIX}")$/;"	v
CMAKE_CL_SHOWINCLUDES_PREFIX	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")$/;"	v
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/example/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMPILER_IS_CYGWIN	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_COMPILER_IS_CYGWIN )$/;"	v
CMAKE_COMPILER_IS_CYGWIN	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_CYGWIN )$/;"	v
CMAKE_COMPILER_IS_GNUCC	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_COMPILER_IS_GNUCC 1)$/;"	v
CMAKE_COMPILER_IS_GNUCXX	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_GNUCXX 1)$/;"	v
CMAKE_COMPILER_IS_MINGW	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_COMPILER_IS_MINGW )$/;"	v
CMAKE_COMPILER_IS_MINGW	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_MINGW )$/;"	v
CMAKE_CROSSCOMPILING	build/CMakeFiles/3.10.2/CMakeSystem.cmake	/^set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/example/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CXX11_COMPILE_FEATURES	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_att/;"	v
CMAKE_CXX14_COMPILE_FEATURES	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_de/;"	v
CMAKE_CXX17_COMPILE_FEATURES	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")$/;"	v
CMAKE_CXX98_COMPILE_FEATURES	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")$/;"	v
CMAKE_CXX_ABI_COMPILED	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_ABI_COMPILED TRUE)$/;"	v
CMAKE_CXX_CL_SHOWINCLUDES_PREFIX	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")$/;"	v
CMAKE_CXX_COMPILER	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER "\/usr\/bin\/c++")$/;"	v
CMAKE_CXX_COMPILER_ABI	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ABI "ELF")$/;"	v
CMAKE_CXX_COMPILER_AR	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_AR "\/usr\/bin\/gcc-ar-7")$/;"	v
CMAKE_CXX_COMPILER_ARG1	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ARG1 "")$/;"	v
CMAKE_CXX_COMPILER_ENV_VAR	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")$/;"	v
CMAKE_CXX_COMPILER_ID	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	build/CMakeFiles/dataformatpp-static.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	build/CMakeFiles/dataformatpp.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	build/example/CMakeFiles/array.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	build/example/CMakeFiles/create.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	build/example/CMakeFiles/load.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID	build/example/CMakeFiles/rename.dir/DependInfo.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID_RUN	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ID_RUN 1)$/;"	v
CMAKE_CXX_COMPILER_LOADED	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_LOADED 1)$/;"	v
CMAKE_CXX_COMPILER_RANLIB	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_RANLIB "\/usr\/bin\/gcc-ranlib-7")$/;"	v
CMAKE_CXX_COMPILER_VERSION	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_VERSION "7.3.0")$/;"	v
CMAKE_CXX_COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")$/;"	v
CMAKE_CXX_COMPILER_WORKS	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_WORKS TRUE)$/;"	v
CMAKE_CXX_COMPILER_WRAPPER	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_WRAPPER "")$/;"	v
CMAKE_CXX_COMPILE_FEATURES	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias/;"	v
CMAKE_CXX_FLAGS_DEBUG	CMakeLists.txt	/^SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -o0 -g -Wall -ggdb -fno-inline")$/;"	v
CMAKE_CXX_FLAGS_RELEAS	CMakeLists.txt	/^SET(CMAKE_CXX_FLAGS_RELEAS "$ENV{CXXFLAGS} -O3 -Wall")$/;"	v
CMAKE_CXX_IGNORE_EXTENSIONS	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)$/;"	v
CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-linux-gnu\/7;\/usr\/lib\/x86_64/;"	v
CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")$/;"	v
CMAKE_CXX_IMPLICIT_LINK_LIBRARIES	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "stdc++;m;gcc_s;gcc;c;gcc_s;gcc")$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/example/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/example/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_LIBRARY_ARCHITECTURE	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")$/;"	v
CMAKE_CXX_LINKER_PREFERENCE	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LINKER_PREFERENCE 30)$/;"	v
CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)$/;"	v
CMAKE_CXX_PLATFORM_ID	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_PLATFORM_ID "Linux")$/;"	v
CMAKE_CXX_SIMULATE_ID	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIMULATE_ID "")$/;"	v
CMAKE_CXX_SIMULATE_VERSION	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIMULATE_VERSION "")$/;"	v
CMAKE_CXX_SIZEOF_DATA_PTR	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIZEOF_DATA_PTR "8")$/;"	v
CMAKE_CXX_SOURCE_FILE_EXTENSIONS	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;mm;CPP)$/;"	v
CMAKE_CXX_STANDARD_COMPUTED_DEFAULT	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "14")$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	build/CMakeFiles/dataformatpp-static.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	build/CMakeFiles/dataformatpp.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	build/example/CMakeFiles/array.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	build/example/CMakeFiles/create.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	build/example/CMakeFiles/load.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_CXX_TARGET_INCLUDE_PATH	build/example/CMakeFiles/rename.dir/DependInfo.cmake	/^set(CMAKE_CXX_TARGET_INCLUDE_PATH$/;"	v
CMAKE_C_ABI_COMPILED	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_ABI_COMPILED TRUE)$/;"	v
CMAKE_C_CL_SHOWINCLUDES_PREFIX	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_CL_SHOWINCLUDES_PREFIX "")$/;"	v
CMAKE_C_COMPILER	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER "\/usr\/bin\/cc")$/;"	v
CMAKE_C_COMPILER_ABI	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ABI "ELF")$/;"	v
CMAKE_C_COMPILER_AR	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_AR "\/usr\/bin\/gcc-ar-7")$/;"	v
CMAKE_C_COMPILER_ARG1	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ARG1 "")$/;"	v
CMAKE_C_COMPILER_ENV_VAR	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ENV_VAR "CC")$/;"	v
CMAKE_C_COMPILER_ID	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ID "GNU")$/;"	v
CMAKE_C_COMPILER_ID	build/CMakeFiles/dataformatpp-static.dir/DependInfo.cmake	/^set(CMAKE_C_COMPILER_ID "GNU")$/;"	v
CMAKE_C_COMPILER_ID	build/CMakeFiles/dataformatpp.dir/DependInfo.cmake	/^set(CMAKE_C_COMPILER_ID "GNU")$/;"	v
CMAKE_C_COMPILER_ID_RUN	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ID_RUN 1)$/;"	v
CMAKE_C_COMPILER_LOADED	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_LOADED 1)$/;"	v
CMAKE_C_COMPILER_RANLIB	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_RANLIB "\/usr\/bin\/gcc-ranlib-7")$/;"	v
CMAKE_C_COMPILER_VERSION	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_VERSION "7.3.0")$/;"	v
CMAKE_C_COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_VERSION_INTERNAL "")$/;"	v
CMAKE_C_COMPILER_WORKS	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_WORKS TRUE)$/;"	v
CMAKE_C_COMPILER_WRAPPER	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_WRAPPER "")$/;"	v
CMAKE_C_COMPILE_FEATURES	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILE_FEATURES "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macr/;"	v
CMAKE_C_IGNORE_EXTENSIONS	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)$/;"	v
CMAKE_C_IMPLICIT_LINK_DIRECTORIES	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-linux-gnu\/7;\/usr\/lib\/x86_64-l/;"	v
CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")$/;"	v
CMAKE_C_IMPLICIT_LINK_LIBRARIES	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "gcc;gcc_s;c;gcc;gcc_s")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/example/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/example/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_LIBRARY_ARCHITECTURE	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")$/;"	v
CMAKE_C_LINKER_PREFERENCE	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_LINKER_PREFERENCE 10)$/;"	v
CMAKE_C_PLATFORM_ID	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_PLATFORM_ID "Linux")$/;"	v
CMAKE_C_SIMULATE_ID	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_SIMULATE_ID "")$/;"	v
CMAKE_C_SIMULATE_VERSION	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_SIMULATE_VERSION "")$/;"	v
CMAKE_C_SIZEOF_DATA_PTR	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_SIZEOF_DATA_PTR "8")$/;"	v
CMAKE_C_SOURCE_FILE_EXTENSIONS	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m)$/;"	v
CMAKE_C_STANDARD_COMPUTED_DEFAULT	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_C_STANDARD_COMPUTED_DEFAULT "11")$/;"	v
CMAKE_C_TARGET_INCLUDE_PATH	build/CMakeFiles/dataformatpp-static.dir/DependInfo.cmake	/^set(CMAKE_C_TARGET_INCLUDE_PATH$/;"	v
CMAKE_C_TARGET_INCLUDE_PATH	build/CMakeFiles/dataformatpp.dir/DependInfo.cmake	/^set(CMAKE_C_TARGET_INCLUDE_PATH$/;"	v
CMAKE_DEPENDS_CHECK_C	build/CMakeFiles/dataformatpp-static.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_C$/;"	v
CMAKE_DEPENDS_CHECK_C	build/CMakeFiles/dataformatpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_C$/;"	v
CMAKE_DEPENDS_CHECK_CXX	build/CMakeFiles/dataformatpp-static.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	build/CMakeFiles/dataformatpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	build/example/CMakeFiles/array.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	build/example/CMakeFiles/create.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	build/example/CMakeFiles/load.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_CHECK_CXX	build/example/CMakeFiles/rename.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_CXX$/;"	v
CMAKE_DEPENDS_GENERATOR	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_DEPENDS_GENERATOR "Unix Makefiles")$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/dataformatpp-static.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/dataformatpp.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/example/CMakeFiles/array.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/example/CMakeFiles/create.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/example/CMakeFiles/load.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/example/CMakeFiles/rename.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPEND_INFO_FILES	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_DEPEND_INFO_FILES$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/example/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/dataformatpp-static.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/dataformatpp.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/example/CMakeFiles/array.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/example/CMakeFiles/create.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/example/CMakeFiles/load.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/example/CMakeFiles/rename.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_HOST_SYSTEM	build/CMakeFiles/3.10.2/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM "Linux-4.15.0-43-generic")$/;"	v
CMAKE_HOST_SYSTEM_NAME	build/CMakeFiles/3.10.2/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_NAME "Linux")$/;"	v
CMAKE_HOST_SYSTEM_PROCESSOR	build/CMakeFiles/3.10.2/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_PROCESSOR "x86_64")$/;"	v
CMAKE_HOST_SYSTEM_VERSION	build/CMakeFiles/3.10.2/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_VERSION "4.15.0-43-generic")$/;"	v
CMAKE_INSTALL_COMPONENT	build/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	build/example/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/example/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/example/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_MANIFEST	build/cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")$/;"	v
CMAKE_INSTALL_MANIFEST	build/cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")$/;"	v
CMAKE_INSTALL_PREFIX	build/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	build/example/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/example/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INTERNAL_PLATFORM_ABI	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_C_COMPILER_ABI}")$/;"	v
CMAKE_INTERNAL_PLATFORM_ABI	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")$/;"	v
CMAKE_LIBRARY_ARCHITECTURE	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^  set(CMAKE_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")$/;"	v
CMAKE_LIBRARY_ARCHITECTURE	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^  set(CMAKE_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")$/;"	v
CMAKE_LINKER	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_LINKER "\/usr\/bin\/ld")$/;"	v
CMAKE_LINKER	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_LINKER "\/usr\/bin\/ld")$/;"	v
CMAKE_MAKEFILE_DEPENDS	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_DEPENDS$/;"	v
CMAKE_MAKEFILE_OUTPUTS	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_OUTPUTS$/;"	v
CMAKE_MAKEFILE_PRODUCTS	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_PRODUCTS$/;"	v
CMAKE_MULTIPLE_OUTPUT_PAIRS	build/CMakeFiles/dataformatpp.dir/DependInfo.cmake	/^set(CMAKE_MULTIPLE_OUTPUT_PAIRS$/;"	v
CMAKE_RANLIB	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^set(CMAKE_RANLIB "\/usr\/bin\/ranlib")$/;"	v
CMAKE_RANLIB	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^set(CMAKE_RANLIB "\/usr\/bin\/ranlib")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/liwenchao\/git\/dataformatpp\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/example/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/liwenchao\/git\/dataformatpp\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/liwenchao\/git\/dataformatpp")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/example/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/liwenchao\/git\/dataformatpp")$/;"	v
CMAKE_SIZEOF_VOID_P	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^  set(CMAKE_SIZEOF_VOID_P "${CMAKE_C_SIZEOF_DATA_PTR}")$/;"	v
CMAKE_SIZEOF_VOID_P	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")$/;"	v
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liwenchao\/git\/dataformatpp$/;"	m
CMAKE_SOURCE_DIR	build/example/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liwenchao\/git\/dataformatpp$/;"	m
CMAKE_SYSTEM	build/CMakeFiles/3.10.2/CMakeSystem.cmake	/^set(CMAKE_SYSTEM "Linux-4.15.0-43-generic")$/;"	v
CMAKE_SYSTEM_LOADED	build/CMakeFiles/3.10.2/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_LOADED 1)$/;"	v
CMAKE_SYSTEM_NAME	build/CMakeFiles/3.10.2/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_NAME "Linux")$/;"	v
CMAKE_SYSTEM_PROCESSOR	build/CMakeFiles/3.10.2/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_PROCESSOR "x86_64")$/;"	v
CMAKE_SYSTEM_VERSION	build/CMakeFiles/3.10.2/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_VERSION "4.15.0-43-generic")$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/dataformatpp-static.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/dataformatpp.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/example/CMakeFiles/array.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/example/CMakeFiles/create.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/example/CMakeFiles/load.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/example/CMakeFiles/rename.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_ID /;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_ID /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
CXX_STD	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define CXX_STD /;"	d	file:
CYGWIN	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^  set(CYGWIN 1)$/;"	v
CYGWIN	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^  set(CYGWIN 1)$/;"	v
C_DIALECT	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^#  define C_DIALECT /;"	d	file:
C_DIALECT	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^#  define C_DIALECT$/;"	d	file:
C_DIALECT	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^# define C_DIALECT /;"	d	file:
DATAFORMATPP_PROJECT_VERSION	build/dataformatpp_config.h	/^#define DATAFORMATPP_PROJECT_VERSION	/;"	d
DATAFORMATPP_PROJECT_VERSION	dataformatpp_config.h.in	/^#define DATAFORMATPP_PROJECT_VERSION	/;"	d	file:
DATAFORMATPP_VERSION_COMMIT	build/dataformatpp_config.h	/^#define DATAFORMATPP_VERSION_COMMIT	/;"	d
DATAFORMATPP_VERSION_COMMIT	dataformatpp_config.h.in	/^#define DATAFORMATPP_VERSION_COMMIT	/;"	d	file:
DATAFORMATPP_VERSION_MAJOR	build/dataformatpp_config.h	/^#define DATAFORMATPP_VERSION_MAJOR	/;"	d
DATAFORMATPP_VERSION_MAJOR	dataformatpp_config.h.in	/^#define DATAFORMATPP_VERSION_MAJOR	/;"	d	file:
DATAFORMATPP_VERSION_MINOR	build/dataformatpp_config.h	/^#define DATAFORMATPP_VERSION_MINOR	/;"	d
DATAFORMATPP_VERSION_MINOR	dataformatpp_config.h.in	/^#define DATAFORMATPP_VERSION_MINOR	/;"	d	file:
DATAFORMAT_LIB	CMakeLists.txt	/^SET(DATAFORMAT_LIB dataformatpp)$/;"	v
DEC	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^#define DEC(/;"	d	file:
DEC	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define DEC(/;"	d	file:
DataObject	src/DataObject.cpp	/^DataObject::DataObject():$/;"	f	class:DataObject
DataObject	src/DataObject.cpp	/^DataObject::DataObject(const DataObject& obj):$/;"	f	class:DataObject
DataObject	src/DataObject.h	/^class DataObject {$/;"	c
Dump	src/JsonObject.cpp	/^int JsonObject::Dump(string comment,cJSON* root)$/;"	f	class:JsonObject	typeref:typename:int
ENABLE_GIT_VERSION	CMakeLists.txt	/^OPTION(ENABLE_GIT_VERSION "using git commit counter as builder version" ON)$/;"	D
ENABLE_TARGET_EXPORT	CMakeLists.txt	/^OPTION(ENABLE_TARGET_EXPORT "enable exporting of CMake targets .Disable when it causes problems"/;"	D
ENABLE_VALGRIND	example/CMakeLists.txt	/^option(ENABLE_VALGRIND "Enable valgrind memory check for the test" OFF)$/;"	D
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/example/Makefile	/^EQUALS = =$/;"	m
HEX	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^#define HEX(/;"	d	file:
HEX	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define HEX(/;"	d	file:
ID_VOID_MAIN	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^# define ID_VOID_MAIN$/;"	d	file:
INC_DIR	CMakeLists.txt	/^SET(INC_DIR$/;"	v
JsonObject	src/JsonObject.cpp	/^JsonObject::JsonObject():$/;"	f	class:JsonObject
JsonObject	src/JsonObject.cpp	/^JsonObject::JsonObject(const JsonObject& obj):$/;"	f	class:JsonObject
JsonObject	src/JsonObject.h	/^class JsonObject : public DataObject$/;"	c
LIB_DIR	CMakeLists.txt	/^SET(LIB_DIR$/;"	v
MEMORYCHECK_COMMAND_OPTIONS	example/CMakeLists.txt	/^		set(MEMORYCHECK_COMMAND_OPTIONS --trace-children=yes --leak-check=full --error-exitcode=1 --su/;"	v
MINGW	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^  set(MINGW 1)$/;"	v
MINGW	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^  set(MINGW 1)$/;"	v
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID$/;"	d	file:
PROJECT_VERSION	CMakeLists.txt	/^SET(PROJECT_VERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_COMMIT}")$/;"	v
RM	build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/example/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/example/Makefile	/^SHELL = \/bin\/sh$/;"	m
SIMULATE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SOURCES	CMakeLists.txt	/^SET(SOURCES cJSON.c)$/;"	v
STRINGIFY	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY(/;"	d	file:
STRINGIFY	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY(/;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY_HELPER(/;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY_HELPER(/;"	d	file:
SUFFIXES	build/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/example/Makefile	/^SUFFIXES =$/;"	m
TOP_DIR	CMakeLists.txt	/^SET(TOP_DIR .)$/;"	v
UNIX	build/CMakeFiles/3.10.2/CMakeCCompiler.cmake	/^  set(UNIX 1)$/;"	v
UNIX	build/CMakeFiles/3.10.2/CMakeCXXCompiler.cmake	/^  set(UNIX 1)$/;"	v
VERSION_COMMIT	CMakeLists.txt	/^  SET(VERSION_COMMIT ${GIT_COMMIT})$/;"	v
VERSION_COMMIT	CMakeLists.txt	/^SET(VERSION_COMMIT 1)$/;"	v
VERSION_MAJOR	CMakeLists.txt	/^SET(VERSION_MAJOR 1)$/;"	v
VERSION_MINOR	CMakeLists.txt	/^SET(VERSION_MINOR 0)$/;"	v
VERSION_SOURCE	CMakeLists.txt	/^SET(VERSION_SOURCE 1)$/;"	v
_CRT_SECURE_NO_DEPRECATE	src/cJSON.c	/^#define _CRT_SECURE_NO_DEPRECATE$/;"	d	file:
_DATAFORMATS_H	src/dataformats.h	/^#define _DATAFORMATS_H$/;"	d
_DATAOBJECT_H	src/DataObject.h	/^#define _DATAOBJECT_H$/;"	d
_IDATABASE_H	src/iDataBase.h	/^#define _IDATABASE_H$/;"	d
_JSONOBJECT_H	src/JsonObject.h	/^#define _JSONOBJECT_H$/;"	d
__WINDOWS__	src/cJSON.h	/^#define __WINDOWS__$/;"	d
__anon8467708a0108	src/cJSON.c	/^typedef struct {$/;"	s	file:
__anon8467708a0208	src/cJSON.c	/^{$/;"	s	file:
__anon8467708a0308	src/cJSON.c	/^{$/;"	s	file:
add	src/JsonObject.cpp	/^int JsonObject::add(string key,JsonObject& val)$/;"	f	class:JsonObject	typeref:typename:int
add	src/JsonObject.cpp	/^int JsonObject::add(string key,JsonObject* val)$/;"	f	class:JsonObject	typeref:typename:int
add	src/JsonObject.cpp	/^int JsonObject::add(string key,double val)$/;"	f	class:JsonObject	typeref:typename:int
add	src/JsonObject.cpp	/^int JsonObject::add(string key,int val)$/;"	f	class:JsonObject	typeref:typename:int
add	src/JsonObject.cpp	/^int JsonObject::add(string key,string val)$/;"	f	class:JsonObject	typeref:typename:int
add_item_to_array	src/cJSON.c	/^static cJSON_bool add_item_to_array(cJSON *array, cJSON *item)$/;"	f	typeref:typename:cJSON_bool	file:
add_item_to_object	src/cJSON.c	/^static cJSON_bool add_item_to_object(cJSON * const object, const char * const string, cJSON * co/;"	f	typeref:typename:cJSON_bool	file:
all	build/Makefile	/^all: cmake_check_build_system$/;"	t
all	build/example/Makefile	/^all: cmake_check_build_system$/;"	t
allocate	src/cJSON.c	/^    void *(*allocate)(size_t size);$/;"	m	struct:internal_hooks	typeref:typename:void * (*)(size_t size)	file:
append	src/JsonObject.cpp	/^int JsonObject::append(JsonObject& obj)$/;"	f	class:JsonObject	typeref:typename:int
append	src/JsonObject.cpp	/^int JsonObject::append(JsonObject* obj)$/;"	f	class:JsonObject	typeref:typename:int
append	src/JsonObject.cpp	/^int JsonObject::append(cJSON* obj)$/;"	f	class:JsonObject	typeref:typename:int
append	src/JsonObject.cpp	/^int JsonObject::append(double val)$/;"	f	class:JsonObject	typeref:typename:int
append	src/JsonObject.cpp	/^int JsonObject::append(int val)$/;"	f	class:JsonObject	typeref:typename:int
append	src/JsonObject.cpp	/^int JsonObject::append(string val)$/;"	f	class:JsonObject	typeref:typename:int
array	build/Makefile	/^array: cmake_check_build_system$/;"	t
array	build/example/Makefile	/^array: example\/CMakeFiles\/array.dir\/rule$/;"	t
array.cpp.i	build/example/Makefile	/^array.cpp.i:$/;"	t
array.cpp.o	build/example/Makefile	/^array.cpp.o:$/;"	t
array.cpp.s	build/example/Makefile	/^array.cpp.s:$/;"	t
array.i	build/example/Makefile	/^array.i: array.cpp.i$/;"	t
array.o	build/example/Makefile	/^array.o: array.cpp.o$/;"	t
array.s	build/example/Makefile	/^array.s: array.cpp.s$/;"	t
array/fast	build/Makefile	/^array\/fast:$/;"	t
array/fast	build/example/Makefile	/^array\/fast:$/;"	t
buffer	src/cJSON.c	/^    unsigned char *buffer;$/;"	m	struct:__anon8467708a0308	typeref:typename:unsigned char *	file:
buffer_at_offset	src/cJSON.c	/^#define buffer_at_offset(/;"	d	file:
buffer_skip_whitespace	src/cJSON.c	/^static parse_buffer *buffer_skip_whitespace(parse_buffer * const buffer)$/;"	f	typeref:typename:parse_buffer *	file:
cJSON	src/cJSON.h	/^typedef struct cJSON$/;"	s
cJSON	src/cJSON.h	/^} cJSON;$/;"	t	typeref:struct:cJSON
cJSON_AddArrayToObject	src/cJSON.c	/^CJSON_PUBLIC(cJSON*) cJSON_AddArrayToObject(cJSON * const object, const char * const name)$/;"	f	typeref:typename:cJSON *
cJSON_AddBoolToObject	src/cJSON.c	/^CJSON_PUBLIC(cJSON*) cJSON_AddBoolToObject(cJSON * const object, const char * const name, const /;"	f	typeref:typename:cJSON *
cJSON_AddFalseToObject	src/cJSON.c	/^CJSON_PUBLIC(cJSON*) cJSON_AddFalseToObject(cJSON * const object, const char * const name)$/;"	f	typeref:typename:cJSON *
cJSON_AddItemReferenceToArray	src/cJSON.c	/^CJSON_PUBLIC(void) cJSON_AddItemReferenceToArray(cJSON *array, cJSON *item)$/;"	f	typeref:typename:void
cJSON_AddItemReferenceToObject	src/cJSON.c	/^CJSON_PUBLIC(void) cJSON_AddItemReferenceToObject(cJSON *object, const char *string, cJSON *item/;"	f	typeref:typename:void
cJSON_AddItemToArray	src/cJSON.c	/^CJSON_PUBLIC(void) cJSON_AddItemToArray(cJSON *array, cJSON *item)$/;"	f	typeref:typename:void
cJSON_AddItemToObject	src/cJSON.c	/^CJSON_PUBLIC(void) cJSON_AddItemToObject(cJSON *object, const char *string, cJSON *item)$/;"	f	typeref:typename:void
cJSON_AddItemToObjectCS	src/cJSON.c	/^CJSON_PUBLIC(void) cJSON_AddItemToObjectCS(cJSON *object, const char *string, cJSON *item)$/;"	f	typeref:typename:void
cJSON_AddNullToObject	src/cJSON.c	/^CJSON_PUBLIC(cJSON*) cJSON_AddNullToObject(cJSON * const object, const char * const name)$/;"	f	typeref:typename:cJSON *
cJSON_AddNumberToObject	src/cJSON.c	/^CJSON_PUBLIC(cJSON*) cJSON_AddNumberToObject(cJSON * const object, const char * const name, cons/;"	f	typeref:typename:cJSON *
cJSON_AddObjectToObject	src/cJSON.c	/^CJSON_PUBLIC(cJSON*) cJSON_AddObjectToObject(cJSON * const object, const char * const name)$/;"	f	typeref:typename:cJSON *
cJSON_AddRawToObject	src/cJSON.c	/^CJSON_PUBLIC(cJSON*) cJSON_AddRawToObject(cJSON * const object, const char * const name, const c/;"	f	typeref:typename:cJSON *
cJSON_AddStringToObject	src/cJSON.c	/^CJSON_PUBLIC(cJSON*) cJSON_AddStringToObject(cJSON * const object, const char * const name, cons/;"	f	typeref:typename:cJSON *
cJSON_AddTrueToObject	src/cJSON.c	/^CJSON_PUBLIC(cJSON*) cJSON_AddTrueToObject(cJSON * const object, const char * const name)$/;"	f	typeref:typename:cJSON *
cJSON_Array	src/cJSON.h	/^#define cJSON_Array /;"	d
cJSON_ArrayForEach	src/cJSON.h	/^#define cJSON_ArrayForEach(/;"	d
cJSON_Compare	src/cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_Compare(const cJSON * const a, const cJSON * const b, const cJSON/;"	f	typeref:typename:cJSON_bool
cJSON_CreateArray	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateArray(void)$/;"	f	typeref:typename:cJSON *
cJSON_CreateArrayReference	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateArrayReference(const cJSON *child) {$/;"	f	typeref:typename:cJSON *
cJSON_CreateBool	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateBool(cJSON_bool b)$/;"	f	typeref:typename:cJSON *
cJSON_CreateDoubleArray	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateDoubleArray(const double *numbers, int count)$/;"	f	typeref:typename:cJSON *
cJSON_CreateFalse	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateFalse(void)$/;"	f	typeref:typename:cJSON *
cJSON_CreateFloatArray	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateFloatArray(const float *numbers, int count)$/;"	f	typeref:typename:cJSON *
cJSON_CreateIntArray	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateIntArray(const int *numbers, int count)$/;"	f	typeref:typename:cJSON *
cJSON_CreateNull	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateNull(void)$/;"	f	typeref:typename:cJSON *
cJSON_CreateNumber	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateNumber(double num)$/;"	f	typeref:typename:cJSON *
cJSON_CreateObject	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateObject(void)$/;"	f	typeref:typename:cJSON *
cJSON_CreateObjectReference	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateObjectReference(const cJSON *child)$/;"	f	typeref:typename:cJSON *
cJSON_CreateRaw	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateRaw(const char *raw)$/;"	f	typeref:typename:cJSON *
cJSON_CreateString	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateString(const char *string)$/;"	f	typeref:typename:cJSON *
cJSON_CreateStringArray	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateStringArray(const char **strings, int count)$/;"	f	typeref:typename:cJSON *
cJSON_CreateStringReference	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateStringReference(const char *string)$/;"	f	typeref:typename:cJSON *
cJSON_CreateTrue	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateTrue(void)$/;"	f	typeref:typename:cJSON *
cJSON_Delete	src/cJSON.c	/^CJSON_PUBLIC(void) cJSON_Delete(cJSON *item)$/;"	f	typeref:typename:void
cJSON_DeleteItemFromArray	src/cJSON.c	/^CJSON_PUBLIC(void) cJSON_DeleteItemFromArray(cJSON *array, int which)$/;"	f	typeref:typename:void
cJSON_DeleteItemFromObject	src/cJSON.c	/^CJSON_PUBLIC(void) cJSON_DeleteItemFromObject(cJSON *object, const char *string)$/;"	f	typeref:typename:void
cJSON_DeleteItemFromObjectCaseSensitive	src/cJSON.c	/^CJSON_PUBLIC(void) cJSON_DeleteItemFromObjectCaseSensitive(cJSON *object, const char *string)$/;"	f	typeref:typename:void
cJSON_DetachItemFromArray	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_DetachItemFromArray(cJSON *array, int which)$/;"	f	typeref:typename:cJSON *
cJSON_DetachItemFromObject	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_DetachItemFromObject(cJSON *object, const char *string)$/;"	f	typeref:typename:cJSON *
cJSON_DetachItemFromObjectCaseSensitive	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_DetachItemFromObjectCaseSensitive(cJSON *object, const char *string)$/;"	f	typeref:typename:cJSON *
cJSON_DetachItemViaPointer	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_DetachItemViaPointer(cJSON *parent, cJSON * const item)$/;"	f	typeref:typename:cJSON *
cJSON_Duplicate	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_Duplicate(const cJSON *item, cJSON_bool recurse)$/;"	f	typeref:typename:cJSON *
cJSON_False	src/cJSON.h	/^#define cJSON_False /;"	d
cJSON_GetArrayItem	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_GetArrayItem(const cJSON *array, int index)$/;"	f	typeref:typename:cJSON *
cJSON_GetArraySize	src/cJSON.c	/^CJSON_PUBLIC(int) cJSON_GetArraySize(const cJSON *array)$/;"	f	typeref:typename:int
cJSON_GetErrorPtr	src/cJSON.c	/^CJSON_PUBLIC(const char *) cJSON_GetErrorPtr(void)$/;"	f	typeref:typename:const char *
cJSON_GetObjectItem	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_GetObjectItem(const cJSON * const object, const char * const string)$/;"	f	typeref:typename:cJSON *
cJSON_GetObjectItemCaseSensitive	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_GetObjectItemCaseSensitive(const cJSON * const object, const char * /;"	f	typeref:typename:cJSON *
cJSON_GetStringValue	src/cJSON.c	/^CJSON_PUBLIC(char *) cJSON_GetStringValue(cJSON *item) {$/;"	f	typeref:typename:char *
cJSON_HasObjectItem	src/cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_HasObjectItem(const cJSON *object, const char *string)$/;"	f	typeref:typename:cJSON_bool
cJSON_Hooks	src/cJSON.h	/^typedef struct cJSON_Hooks$/;"	s
cJSON_Hooks	src/cJSON.h	/^} cJSON_Hooks;$/;"	t	typeref:struct:cJSON_Hooks
cJSON_InitHooks	src/cJSON.c	/^CJSON_PUBLIC(void) cJSON_InitHooks(cJSON_Hooks* hooks)$/;"	f	typeref:typename:void
cJSON_InsertItemInArray	src/cJSON.c	/^CJSON_PUBLIC(void) cJSON_InsertItemInArray(cJSON *array, int which, cJSON *newitem)$/;"	f	typeref:typename:void
cJSON_Invalid	src/cJSON.h	/^#define cJSON_Invalid /;"	d
cJSON_IsArray	src/cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsArray(const cJSON * const item)$/;"	f	typeref:typename:cJSON_bool
cJSON_IsBool	src/cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsBool(const cJSON * const item)$/;"	f	typeref:typename:cJSON_bool
cJSON_IsFalse	src/cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsFalse(const cJSON * const item)$/;"	f	typeref:typename:cJSON_bool
cJSON_IsInvalid	src/cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsInvalid(const cJSON * const item)$/;"	f	typeref:typename:cJSON_bool
cJSON_IsNull	src/cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsNull(const cJSON * const item)$/;"	f	typeref:typename:cJSON_bool
cJSON_IsNumber	src/cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsNumber(const cJSON * const item)$/;"	f	typeref:typename:cJSON_bool
cJSON_IsObject	src/cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsObject(const cJSON * const item)$/;"	f	typeref:typename:cJSON_bool
cJSON_IsRaw	src/cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsRaw(const cJSON * const item)$/;"	f	typeref:typename:cJSON_bool
cJSON_IsReference	src/cJSON.h	/^#define cJSON_IsReference /;"	d
cJSON_IsString	src/cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsString(const cJSON * const item)$/;"	f	typeref:typename:cJSON_bool
cJSON_IsTrue	src/cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsTrue(const cJSON * const item)$/;"	f	typeref:typename:cJSON_bool
cJSON_Minify	src/cJSON.c	/^CJSON_PUBLIC(void) cJSON_Minify(char *json)$/;"	f	typeref:typename:void
cJSON_NULL	src/cJSON.h	/^#define cJSON_NULL /;"	d
cJSON_New_Item	src/cJSON.c	/^static cJSON *cJSON_New_Item(const internal_hooks * const hooks)$/;"	f	typeref:typename:cJSON *	file:
cJSON_Number	src/cJSON.h	/^#define cJSON_Number /;"	d
cJSON_Object	src/cJSON.h	/^#define cJSON_Object /;"	d
cJSON_Parse	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_Parse(const char *value)$/;"	f	typeref:typename:cJSON *
cJSON_ParseWithOpts	src/cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_ParseWithOpts(const char *value, const char **return_parse_end, cJSO/;"	f	typeref:typename:cJSON *
cJSON_Print	src/cJSON.c	/^CJSON_PUBLIC(char *) cJSON_Print(const cJSON *item)$/;"	f	typeref:typename:char *
cJSON_PrintBuffered	src/cJSON.c	/^CJSON_PUBLIC(char *) cJSON_PrintBuffered(const cJSON *item, int prebuffer, cJSON_bool fmt)$/;"	f	typeref:typename:char *
cJSON_PrintPreallocated	src/cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_PrintPreallocated(cJSON *item, char *buf, const int len, const cJ/;"	f	typeref:typename:cJSON_bool
cJSON_PrintUnformatted	src/cJSON.c	/^CJSON_PUBLIC(char *) cJSON_PrintUnformatted(const cJSON *item)$/;"	f	typeref:typename:char *
cJSON_Raw	src/cJSON.h	/^#define cJSON_Raw /;"	d
cJSON_ReplaceItemInArray	src/cJSON.c	/^CJSON_PUBLIC(void) cJSON_ReplaceItemInArray(cJSON *array, int which, cJSON *newitem)$/;"	f	typeref:typename:void
cJSON_ReplaceItemInObject	src/cJSON.c	/^CJSON_PUBLIC(void) cJSON_ReplaceItemInObject(cJSON *object, const char *string, cJSON *newitem)$/;"	f	typeref:typename:void
cJSON_ReplaceItemInObjectCaseSensitive	src/cJSON.c	/^CJSON_PUBLIC(void) cJSON_ReplaceItemInObjectCaseSensitive(cJSON *object, const char *string, cJS/;"	f	typeref:typename:void
cJSON_ReplaceItemViaPointer	src/cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_ReplaceItemViaPointer(cJSON * const parent, cJSON * const item, c/;"	f	typeref:typename:cJSON_bool
cJSON_SetIntValue	src/cJSON.h	/^#define cJSON_SetIntValue(/;"	d
cJSON_SetNumberHelper	src/cJSON.c	/^CJSON_PUBLIC(double) cJSON_SetNumberHelper(cJSON *object, double number)$/;"	f	typeref:typename:double
cJSON_SetNumberValue	src/cJSON.h	/^#define cJSON_SetNumberValue(/;"	d
cJSON_String	src/cJSON.h	/^#define cJSON_String /;"	d
cJSON_StringIsConst	src/cJSON.h	/^#define cJSON_StringIsConst /;"	d
cJSON_True	src/cJSON.h	/^#define cJSON_True /;"	d
cJSON_Version	src/cJSON.c	/^CJSON_PUBLIC(const char*) cJSON_Version(void)$/;"	f	typeref:typename:const char *
cJSON__h	src/cJSON.h	/^#define cJSON__h$/;"	d
cJSON_bool	src/cJSON.h	/^typedef int cJSON_bool;$/;"	t	typeref:typename:int
cJSON_free	src/cJSON.c	/^CJSON_PUBLIC(void) cJSON_free(void *object)$/;"	f	typeref:typename:void
cJSON_malloc	src/cJSON.c	/^CJSON_PUBLIC(void *) cJSON_malloc(size_t size)$/;"	f	typeref:typename:void *
cJSON_strdup	src/cJSON.c	/^static unsigned char* cJSON_strdup(const unsigned char* string, const internal_hooks * const hoo/;"	f	typeref:typename:unsigned char *	file:
can_access_at_index	src/cJSON.c	/^#define can_access_at_index(/;"	d	file:
can_read	src/cJSON.c	/^#define can_read(/;"	d	file:
cannot_access_at_index	src/cJSON.c	/^#define cannot_access_at_index(/;"	d	file:
case_insensitive_strcmp	src/cJSON.c	/^static int case_insensitive_strcmp(const unsigned char *string1, const unsigned char *string2)$/;"	f	typeref:typename:int	file:
cast_away_const	src/cJSON.c	/^static void* cast_away_const(const void* string)$/;"	f	typeref:typename:void *	file:
child	src/cJSON.h	/^    struct cJSON *child;$/;"	m	struct:cJSON	typeref:struct:cJSON *
cjson_min	src/cJSON.c	/^#define cjson_min(/;"	d	file:
clean	build/Makefile	/^clean:$/;"	t
clean	build/example/Makefile	/^clean:$/;"	t
clean/fast	build/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	build/example/Makefile	/^clean\/fast: clean$/;"	t
clear	src/DataObject.cpp	/^int DataObject::clear()$/;"	f	class:DataObject	typeref:typename:int
clear	src/JsonObject.cpp	/^int JsonObject::clear()$/;"	f	class:JsonObject	typeref:typename:int
clone	src/JsonObject.cpp	/^JsonObject JsonObject::clone()$/;"	f	class:JsonObject	typeref:typename:JsonObject
cmake_check_build_system	build/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	build/example/Makefile	/^cmake_check_build_system:$/;"	t
cmake_force	build/Makefile	/^cmake_force:$/;"	t
cmake_force	build/example/Makefile	/^cmake_force:$/;"	t
const	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^# define const$/;"	d	file:
content	src/cJSON.c	/^    const unsigned char *content;$/;"	m	struct:__anon8467708a0208	typeref:typename:const unsigned char *	file:
create	build/Makefile	/^create: cmake_check_build_system$/;"	t
create	build/example/Makefile	/^create: example\/CMakeFiles\/create.dir\/rule$/;"	t
create.cpp.i	build/example/Makefile	/^create.cpp.i:$/;"	t
create.cpp.o	build/example/Makefile	/^create.cpp.o:$/;"	t
create.cpp.s	build/example/Makefile	/^create.cpp.s:$/;"	t
create.i	build/example/Makefile	/^create.i: create.cpp.i$/;"	t
create.o	build/example/Makefile	/^create.o: create.cpp.o$/;"	t
create.s	build/example/Makefile	/^create.s: create.cpp.s$/;"	t
create/fast	build/Makefile	/^create\/fast:$/;"	t
create/fast	build/example/Makefile	/^create\/fast:$/;"	t
create_reference	src/cJSON.c	/^static cJSON *create_reference(const cJSON *item, const internal_hooks * const hooks)$/;"	f	typeref:typename:cJSON *	file:
dataformatpp	CMakeLists.txt	/^PROJECT(dataformatpp)$/;"	p
dataformatpp	README.md	/^# dataformatpp$/;"	c
dataformatpp	build/Makefile	/^dataformatpp: cmake_check_build_system$/;"	t
dataformatpp-static	build/Makefile	/^dataformatpp-static: cmake_check_build_system$/;"	t
dataformatpp-static/fast	build/Makefile	/^dataformatpp-static\/fast:$/;"	t
dataformatpp/fast	build/Makefile	/^dataformatpp\/fast:$/;"	t
deallocate	src/cJSON.c	/^    void (*deallocate)(void *pointer);$/;"	m	struct:internal_hooks	typeref:typename:void (*)(void * pointer)	file:
default_target	build/Makefile	/^default_target: all$/;"	t
default_target	build/example/Makefile	/^default_target: all$/;"	t
depend	build/Makefile	/^depend:$/;"	t
depend	build/example/Makefile	/^depend:$/;"	t
depth	src/cJSON.c	/^    size_t depth; \/* How deeply nested (in arrays\/objects) is the input at the current offset./;"	m	struct:__anon8467708a0208	typeref:typename:size_t	file:
depth	src/cJSON.c	/^    size_t depth; \/* current nesting depth (for formatted printing) *\/$/;"	m	struct:__anon8467708a0308	typeref:typename:size_t	file:
detach	src/JsonObject.cpp	/^cJSON* JsonObject::detach(int idx)$/;"	f	class:JsonObject	typeref:typename:cJSON *
detach	src/JsonObject.cpp	/^cJSON* JsonObject::detach(string key)$/;"	f	class:JsonObject	typeref:typename:cJSON *
dup	src/JsonObject.cpp	/^DataObject* JsonObject::dup()$/;"	f	class:JsonObject	typeref:typename:DataObject *
edit_cache	build/Makefile	/^edit_cache:$/;"	t
edit_cache	build/example/Makefile	/^edit_cache:$/;"	t
edit_cache/fast	build/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	build/example/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
ensure	src/cJSON.c	/^static unsigned char* ensure(printbuffer * const p, size_t needed)$/;"	f	typeref:typename:unsigned char *	file:
error	src/cJSON.c	/^} error;$/;"	t	typeref:struct:__anon8467708a0108	file:
example/CMakeFiles/array.dir/rule	build/example/Makefile	/^example\/CMakeFiles\/array.dir\/rule:$/;"	t
example/CMakeFiles/create.dir/rule	build/example/Makefile	/^example\/CMakeFiles\/create.dir\/rule:$/;"	t
example/CMakeFiles/load.dir/rule	build/example/Makefile	/^example\/CMakeFiles\/load.dir\/rule:$/;"	t
example/CMakeFiles/rename.dir/rule	build/example/Makefile	/^example\/CMakeFiles\/rename.dir\/rule:$/;"	t
exp_lists	example/CMakeLists.txt	/^set(exp_lists$/;"	v
fBuffer	src/DataObject.h	/^	uint8_t*		fBuffer;$/;"	m	class:DataObject	typeref:typename:uint8_t *
fBufferSize	src/DataObject.h	/^	uint32_t		fBufferSize;$/;"	m	class:DataObject	typeref:typename:uint32_t
fDbName	src/iDataBase.h	/^	char*				fDbName;$/;"	m	class:iDataBase	typeref:typename:char *
fIsOpen	src/iDataBase.h	/^	int					fIsOpen;$/;"	m	class:iDataBase	typeref:typename:int
fJson	src/JsonObject.h	/^  cJSON*            fJson;$/;"	m	class:JsonObject	typeref:typename:cJSON *
false	src/cJSON.c	/^#define false /;"	d	file:
features	build/CMakeFiles/feature_tests.c	/^  const char features[] = {"\\n"$/;"	v	typeref:typename:const char[]
features	build/CMakeFiles/feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v	typeref:typename:const char[]
format	src/cJSON.c	/^    cJSON_bool format; \/* is this print a formatted print *\/$/;"	m	struct:__anon8467708a0308	typeref:typename:cJSON_bool	file:
free_fn	src/cJSON.h	/^      void (*free_fn)(void *ptr);$/;"	m	struct:cJSON_Hooks	typeref:typename:void (*)(void * ptr)
get	src/JsonObject.cpp	/^JsonObject JsonObject::get(int idx)$/;"	f	class:JsonObject	typeref:typename:JsonObject
get	src/JsonObject.cpp	/^JsonObject JsonObject::get(string key)$/;"	f	class:JsonObject	typeref:typename:JsonObject
get	src/JsonObject.cpp	/^int JsonObject::get(int idx, double& val)$/;"	f	class:JsonObject	typeref:typename:int
get	src/JsonObject.cpp	/^int JsonObject::get(int idx, int& val)$/;"	f	class:JsonObject	typeref:typename:int
get	src/JsonObject.cpp	/^int JsonObject::get(int idx, string& val)$/;"	f	class:JsonObject	typeref:typename:int
get	src/JsonObject.cpp	/^int JsonObject::get(string key, double& val)$/;"	f	class:JsonObject	typeref:typename:int
get	src/JsonObject.cpp	/^int JsonObject::get(string key, int& val)$/;"	f	class:JsonObject	typeref:typename:int
get	src/JsonObject.cpp	/^int JsonObject::get(string key, string& val)$/;"	f	class:JsonObject	typeref:typename:int
get_array_item	src/cJSON.c	/^static cJSON* get_array_item(const cJSON *array, size_t index)$/;"	f	typeref:typename:cJSON *	file:
get_decimal_point	src/cJSON.c	/^static unsigned char get_decimal_point(void)$/;"	f	typeref:typename:unsigned char	file:
get_object_item	src/cJSON.c	/^static cJSON *get_object_item(const cJSON * const object, const char * const name, const cJSON_b/;"	f	typeref:typename:cJSON *	file:
global_error	src/cJSON.c	/^static error global_error = { NULL, 0 };$/;"	v	typeref:typename:error	file:
global_hooks	src/cJSON.c	/^static internal_hooks global_hooks = { internal_malloc, internal_free, internal_realloc };$/;"	v	typeref:typename:internal_hooks	file:
help	build/Makefile	/^help:$/;"	t
help	build/example/Makefile	/^help:$/;"	t
hooks	src/cJSON.c	/^    internal_hooks hooks;$/;"	m	struct:__anon8467708a0208	typeref:typename:internal_hooks	file:
hooks	src/cJSON.c	/^    internal_hooks hooks;$/;"	m	struct:__anon8467708a0308	typeref:typename:internal_hooks	file:
iDataBase	src/iDataBase.h	/^class iDataBase{$/;"	c
info_arch	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_arch	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_cray	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_cray	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_language_dialect_default	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v	typeref:typename:const char *
info_language_dialect_default	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v	typeref:typename:const char *
info_platform	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_platform	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate_version	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_simulate_version	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_version	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
internal_free	src/cJSON.c	/^#define internal_free /;"	d	file:
internal_free	src/cJSON.c	/^static void internal_free(void *pointer)$/;"	f	typeref:typename:void	file:
internal_hooks	src/cJSON.c	/^typedef struct internal_hooks$/;"	s	file:
internal_hooks	src/cJSON.c	/^} internal_hooks;$/;"	t	typeref:struct:internal_hooks	file:
internal_malloc	src/cJSON.c	/^#define internal_malloc /;"	d	file:
internal_malloc	src/cJSON.c	/^static void *internal_malloc(size_t size)$/;"	f	typeref:typename:void *	file:
internal_realloc	src/cJSON.c	/^#define internal_realloc /;"	d	file:
internal_realloc	src/cJSON.c	/^static void *internal_realloc(void *pointer, size_t size)$/;"	f	typeref:typename:void *	file:
is_array	src/JsonObject.cpp	/^int JsonObject::is_array()$/;"	f	class:JsonObject	typeref:typename:int
is_empty	src/JsonObject.h	/^  virtual int is_empty(){ return (fJson == NULL);  }$/;"	f	class:JsonObject	typeref:typename:int
json	src/cJSON.c	/^    const unsigned char *json;$/;"	m	struct:__anon8467708a0108	typeref:typename:const unsigned char *	file:
length	src/cJSON.c	/^    size_t length;$/;"	m	struct:__anon8467708a0208	typeref:typename:size_t	file:
length	src/cJSON.c	/^    size_t length;$/;"	m	struct:__anon8467708a0308	typeref:typename:size_t	file:
load	build/Makefile	/^load: cmake_check_build_system$/;"	t
load	build/example/Makefile	/^load: example\/CMakeFiles\/load.dir\/rule$/;"	t
load	src/DataObject.cpp	/^int DataObject::load(string path)$/;"	f	class:DataObject	typeref:typename:int
load	src/JsonObject.cpp	/^int JsonObject::load(string path)$/;"	f	class:JsonObject	typeref:typename:int
load.cpp.i	build/example/Makefile	/^load.cpp.i:$/;"	t
load.cpp.o	build/example/Makefile	/^load.cpp.o:$/;"	t
load.cpp.s	build/example/Makefile	/^load.cpp.s:$/;"	t
load.i	build/example/Makefile	/^load.i: load.cpp.i$/;"	t
load.o	build/example/Makefile	/^load.o: load.cpp.o$/;"	t
load.s	build/example/Makefile	/^load.s: load.cpp.s$/;"	t
load/fast	build/Makefile	/^load\/fast:$/;"	t
load/fast	build/example/Makefile	/^load\/fast:$/;"	t
main	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f	typeref:typename:void
main	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	build/CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f	typeref:typename:int
main	build/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f	typeref:typename:int
main	example/array.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	example/create.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	example/load.cpp	/^int main(int argc ,char** argv)$/;"	f	typeref:typename:int
main	example/rename.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
malloc_fn	src/cJSON.h	/^      void *(*malloc_fn)(size_t sz);$/;"	m	struct:cJSON_Hooks	typeref:typename:void * (*)(size_t sz)
new_sub	src/JsonObject.cpp	/^cJSON* JsonObject::new_sub(cJSON* root,string key)$/;"	f	class:JsonObject	typeref:typename:cJSON *
new_sub	src/JsonObject.cpp	/^cJSON* JsonObject::new_sub(cJSON* root,string key,cJSON* subobj)$/;"	f	class:JsonObject	typeref:typename:cJSON *
new_sub	src/JsonObject.cpp	/^cJSON* JsonObject::new_sub(string key)$/;"	f	class:JsonObject	typeref:typename:cJSON *
next	src/cJSON.h	/^    struct cJSON *next;$/;"	m	struct:cJSON	typeref:struct:cJSON *
noalloc	src/cJSON.c	/^    cJSON_bool noalloc;$/;"	m	struct:__anon8467708a0308	typeref:typename:cJSON_bool	file:
offset	src/cJSON.c	/^    size_t offset;$/;"	m	struct:__anon8467708a0208	typeref:typename:size_t	file:
offset	src/cJSON.c	/^    size_t offset;$/;"	m	struct:__anon8467708a0308	typeref:typename:size_t	file:
operator <<	src/JsonObject.cpp	/^ostream& operator<<(ostream &output, const JsonObject& obj)$/;"	f	typeref:typename:ostream &
operator =	src/DataObject.cpp	/^DataObject& DataObject::operator=(const DataObject& obj)$/;"	f	class:DataObject	typeref:typename:DataObject &
operator =	src/JsonObject.cpp	/^JsonObject& JsonObject::operator=(cJSON* obj)$/;"	f	class:JsonObject	typeref:typename:JsonObject &
operator =	src/JsonObject.cpp	/^JsonObject& JsonObject::operator=(const JsonObject& obj)$/;"	f	class:JsonObject	typeref:typename:JsonObject &
operator =	src/JsonObject.cpp	/^JsonObject& JsonObject::operator=(string jsonstring)$/;"	f	class:JsonObject	typeref:typename:JsonObject &
parse	src/JsonObject.cpp	/^int JsonObject::parse(cJSON* root)$/;"	f	class:JsonObject	typeref:typename:int
parse	src/JsonObject.cpp	/^int JsonObject::parse(const char* s, const int size)$/;"	f	class:JsonObject	typeref:typename:int
parse	src/JsonObject.cpp	/^int JsonObject::parse(string detail)$/;"	f	class:JsonObject	typeref:typename:int
parse_array	src/cJSON.c	/^static cJSON_bool parse_array(cJSON * const item, parse_buffer * const input_buffer)$/;"	f	typeref:typename:cJSON_bool	file:
parse_buffer	src/cJSON.c	/^} parse_buffer;$/;"	t	typeref:struct:__anon8467708a0208	file:
parse_hex4	src/cJSON.c	/^static unsigned parse_hex4(const unsigned char * const input)$/;"	f	typeref:typename:unsigned	file:
parse_number	src/cJSON.c	/^static cJSON_bool parse_number(cJSON * const item, parse_buffer * const input_buffer)$/;"	f	typeref:typename:cJSON_bool	file:
parse_object	src/cJSON.c	/^static cJSON_bool parse_object(cJSON * const item, parse_buffer * const input_buffer)$/;"	f	typeref:typename:cJSON_bool	file:
parse_string	src/cJSON.c	/^static cJSON_bool parse_string(cJSON * const item, parse_buffer * const input_buffer)$/;"	f	typeref:typename:cJSON_bool	file:
parse_value	src/cJSON.c	/^static cJSON_bool parse_value(cJSON * const item, parse_buffer * const input_buffer)$/;"	f	typeref:typename:cJSON_bool	file:
position	src/cJSON.c	/^    size_t position;$/;"	m	struct:__anon8467708a0108	typeref:typename:size_t	file:
preinstall	build/Makefile	/^preinstall: all$/;"	t
preinstall	build/example/Makefile	/^preinstall: all$/;"	t
preinstall/fast	build/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	build/example/Makefile	/^preinstall\/fast:$/;"	t
prev	src/cJSON.h	/^    struct cJSON *prev;$/;"	m	struct:cJSON	typeref:struct:cJSON *
print	src/DataObject.cpp	/^int DataObject::print()$/;"	f	class:DataObject	typeref:typename:int
print	src/JsonObject.cpp	/^int JsonObject::print()$/;"	f	class:JsonObject	typeref:typename:int
print	src/JsonObject.cpp	/^int JsonObject::print(int idx)$/;"	f	class:JsonObject	typeref:typename:int
print	src/JsonObject.cpp	/^int JsonObject::print(string sub)$/;"	f	class:JsonObject	typeref:typename:int
print	src/cJSON.c	/^static unsigned char *print(const cJSON * const item, cJSON_bool format, const internal_hooks * /;"	f	typeref:typename:unsigned char *	file:
print_array	src/cJSON.c	/^static cJSON_bool print_array(const cJSON * const item, printbuffer * const output_buffer)$/;"	f	typeref:typename:cJSON_bool	file:
print_number	src/cJSON.c	/^static cJSON_bool print_number(const cJSON * const item, printbuffer * const output_buffer)$/;"	f	typeref:typename:cJSON_bool	file:
print_object	src/cJSON.c	/^static cJSON_bool print_object(const cJSON * const item, printbuffer * const output_buffer)$/;"	f	typeref:typename:cJSON_bool	file:
print_string	src/cJSON.c	/^static cJSON_bool print_string(const cJSON * const item, printbuffer * const p)$/;"	f	typeref:typename:cJSON_bool	file:
print_string_ptr	src/cJSON.c	/^static cJSON_bool print_string_ptr(const unsigned char * const input, printbuffer * const output/;"	f	typeref:typename:cJSON_bool	file:
print_value	src/cJSON.c	/^static cJSON_bool print_value(const cJSON * const item, printbuffer * const output_buffer)$/;"	f	typeref:typename:cJSON_bool	file:
printbuffer	src/cJSON.c	/^} printbuffer;$/;"	t	typeref:struct:__anon8467708a0308	file:
qnxnto	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
qnxnto	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
reallocate	src/cJSON.c	/^    void *(*reallocate)(void *pointer, size_t size);$/;"	m	struct:internal_hooks	typeref:typename:void * (*)(void * pointer,size_t size)	file:
rebuild_cache	build/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	build/example/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache/fast	build/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	build/example/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
remove	src/JsonObject.cpp	/^int JsonObject::remove(int idx)$/;"	f	class:JsonObject	typeref:typename:int
remove	src/JsonObject.cpp	/^int JsonObject::remove(string key)$/;"	f	class:JsonObject	typeref:typename:int
rename	build/Makefile	/^rename: cmake_check_build_system$/;"	t
rename	build/example/Makefile	/^rename: example\/CMakeFiles\/rename.dir\/rule$/;"	t
rename	src/JsonObject.cpp	/^int JsonObject::rename(cJSON* root, string key, string newkey)$/;"	f	class:JsonObject	typeref:typename:int
rename	src/JsonObject.cpp	/^int JsonObject::rename(string key, string newkey)$/;"	f	class:JsonObject	typeref:typename:int
rename.cpp.i	build/example/Makefile	/^rename.cpp.i:$/;"	t
rename.cpp.o	build/example/Makefile	/^rename.cpp.o:$/;"	t
rename.cpp.s	build/example/Makefile	/^rename.cpp.s:$/;"	t
rename.i	build/example/Makefile	/^rename.i: rename.cpp.i$/;"	t
rename.o	build/example/Makefile	/^rename.o: rename.cpp.o$/;"	t
rename.s	build/example/Makefile	/^rename.s: rename.cpp.s$/;"	t
rename/fast	build/Makefile	/^rename\/fast:$/;"	t
rename/fast	build/example/Makefile	/^rename\/fast:$/;"	t
renamearray	src/JsonObject.cpp	/^int JsonObject::renamearray(cJSON* root, string key, string newkey)$/;"	f	class:JsonObject	typeref:typename:int
renamearray	src/JsonObject.cpp	/^int JsonObject::renamearray(cJSON* root,string arr,string key, string newkey)$/;"	f	class:JsonObject	typeref:typename:int
renamearray	src/JsonObject.cpp	/^int JsonObject::renamearray(string arr,string key,string newkey)$/;"	f	class:JsonObject	typeref:typename:int
replace_item_in_object	src/cJSON.c	/^static cJSON_bool replace_item_in_object(cJSON *object, const char *string, cJSON *replacement, /;"	f	typeref:typename:cJSON_bool	file:
save	src/DataObject.cpp	/^int DataObject::save(string path)$/;"	f	class:DataObject	typeref:typename:int
save	src/JsonObject.cpp	/^int JsonObject::save(string path)$/;"	f	class:JsonObject	typeref:typename:int
size_array	src/JsonObject.cpp	/^int JsonObject::size_array()$/;"	f	class:JsonObject	typeref:typename:int
skip_utf8_bom	src/cJSON.c	/^static parse_buffer *skip_utf8_bom(parse_buffer * const buffer)$/;"	f	typeref:typename:parse_buffer *	file:
src/DataObject.cpp.i	build/Makefile	/^src\/DataObject.cpp.i:$/;"	t
src/DataObject.cpp.o	build/Makefile	/^src\/DataObject.cpp.o:$/;"	t
src/DataObject.cpp.s	build/Makefile	/^src\/DataObject.cpp.s:$/;"	t
src/DataObject.i	build/Makefile	/^src\/DataObject.i: src\/DataObject.cpp.i$/;"	t
src/DataObject.o	build/Makefile	/^src\/DataObject.o: src\/DataObject.cpp.o$/;"	t
src/DataObject.s	build/Makefile	/^src\/DataObject.s: src\/DataObject.cpp.s$/;"	t
src/JsonObject.cpp.i	build/Makefile	/^src\/JsonObject.cpp.i:$/;"	t
src/JsonObject.cpp.o	build/Makefile	/^src\/JsonObject.cpp.o:$/;"	t
src/JsonObject.cpp.s	build/Makefile	/^src\/JsonObject.cpp.s:$/;"	t
src/JsonObject.i	build/Makefile	/^src\/JsonObject.i: src\/JsonObject.cpp.i$/;"	t
src/JsonObject.o	build/Makefile	/^src\/JsonObject.o: src\/JsonObject.cpp.o$/;"	t
src/JsonObject.s	build/Makefile	/^src\/JsonObject.s: src\/JsonObject.cpp.s$/;"	t
src/cJSON.c.i	build/Makefile	/^src\/cJSON.c.i:$/;"	t
src/cJSON.c.o	build/Makefile	/^src\/cJSON.c.o:$/;"	t
src/cJSON.c.s	build/Makefile	/^src\/cJSON.c.s:$/;"	t
src/cJSON.i	build/Makefile	/^src\/cJSON.i: src\/cJSON.c.i$/;"	t
src/cJSON.o	build/Makefile	/^src\/cJSON.o: src\/cJSON.c.o$/;"	t
src/cJSON.s	build/Makefile	/^src\/cJSON.s: src\/cJSON.c.s$/;"	t
string	src/cJSON.h	/^    char *string;$/;"	m	struct:cJSON	typeref:typename:char *
string_to_double	src/JsonObject.cpp	/^int JsonObject::string_to_double(string key)$/;"	f	class:JsonObject	typeref:typename:int
string_to_int	src/JsonObject.cpp	/^int JsonObject::string_to_int(string key)$/;"	f	class:JsonObject	typeref:typename:int
sub	src/JsonObject.cpp	/^cJSON* JsonObject::sub(cJSON* root, string key)$/;"	f	class:JsonObject	typeref:typename:cJSON *
sub	src/JsonObject.cpp	/^cJSON* JsonObject::sub(int idx)$/;"	f	class:JsonObject	typeref:typename:cJSON *
sub	src/JsonObject.cpp	/^cJSON* JsonObject::sub(string key)$/;"	f	class:JsonObject	typeref:typename:cJSON *
suffix_object	src/cJSON.c	/^static void suffix_object(cJSON *prev, cJSON *item)$/;"	f	typeref:typename:void	file:
to_bin	src/JsonObject.cpp	/^int JsonObject::to_bin(uint8_t *buffer, int& length)$/;"	f	class:JsonObject	typeref:typename:int
to_json	src/JsonObject.cpp	/^cJSON* JsonObject::to_json()$/;"	f	class:JsonObject	typeref:typename:cJSON *
to_string	src/JsonObject.cpp	/^char* JsonObject::to_string()$/;"	f	class:JsonObject	typeref:typename:char *
to_string	src/JsonObject.cpp	/^int JsonObject::to_string(string &str)$/;"	f	class:JsonObject	typeref:typename:int
true	src/cJSON.c	/^#define true /;"	d	file:
type	src/cJSON.h	/^    int type;$/;"	m	struct:cJSON	typeref:typename:int
update_offset	src/cJSON.c	/^static void update_offset(printbuffer * const buffer)$/;"	f	typeref:typename:void	file:
ussage	example/load.cpp	/^static const char ussage[] = "\\n\\$/;"	v	typeref:typename:const char[]	file:
utf16_literal_to_utf8	src/cJSON.c	/^static unsigned char utf16_literal_to_utf8(const unsigned char * const input_pointer, const unsi/;"	f	typeref:typename:unsigned char	file:
valuedouble	src/cJSON.h	/^    double valuedouble;$/;"	m	struct:cJSON	typeref:typename:double
valueint	src/cJSON.h	/^    int valueint;$/;"	m	struct:cJSON	typeref:typename:int
valuestring	src/cJSON.h	/^    char *valuestring;$/;"	m	struct:cJSON	typeref:typename:char *
volatile	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^# define volatile$/;"	d	file:
~DataObject	src/DataObject.cpp	/^DataObject::~DataObject()$/;"	f	class:DataObject
~JsonObject	src/JsonObject.cpp	/^JsonObject::~JsonObject()$/;"	f	class:JsonObject
~iDataBase	src/iDataBase.h	/^	virtual ~iDataBase(){};$/;"	f	class:iDataBase
