
PROJECT(dataformatpp)
CMAKE_MINIMUM_REQUIRED(VERSION 3.5)

SET(VERSION_MAJOR 1)
SET(VERSION_MINOR 0)
SET(VERSION_COMMIT 1)
SET(VERSION_SOURCE 1)
SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -o0 -g -Wall -ggdb -fno-inline")
SET(CMAKE_CXX_FLAGS_RELEAS "$ENV{CXXFLAGS} -O3 -Wall")

SET(CMAKE_BUILD_TYPE "Debug")

OPTION(BUILD_SHARED_LIBS "Build shared libraries" ON)
OPTION(ENABLE_TARGET_EXPORT "enable exporting of CMake targets .Disable when it causes problems" ON)
OPTION(ENABLE_GIT_VERSION "using git commit counter as builder version" ON)


if(ENABLE_GIT_VERSION)

  message("using git commit counter as builder version")
  exec_program(
    "git"
    ${CMAKE_CURRENT_SOURCE_DIR}
    ARGS "rev-list HEAD | wc -l"
    OUTPUT_VARIABLE GIT_COMMIT
    )
  SET(VERSION_COMMIT ${GIT_COMMIT})
endif(ENABLE_GIT_VERSION)

SET(PROJECT_VERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_COMMIT}")
CONFIGURE_FILE(
	"${PROJECT_SOURCE_DIR}/dataformatpp_config.h.in"
	"${PROJECT_BINARY_DIR}/dataformatpp_config.h"
	)

SET(DATAFORMAT_LIB dataformatpp)
SET(SOURCES cJSON.c)

SET(TOP_DIR .)
SET(INC_DIR
		${SYS_INC_DIR}
		${TOP_DIR}/include/
		${TOP_DIR}/src/
		${TOP_DIR}/lib/
		)

SET(LIB_DIR
  ${SYS_LIB_DIR}
  )

INCLUDE_DIRECTORIES(${INC_DIR})
LINK_DIRECTORIES(${LIB_DIR})

AUX_SOURCE_DIRECTORY(${TOP_DIR}/src LIB_SOURCES)
ADD_LIBRARY("${DATAFORMAT_LIB}" SHARED ${LIB_SOURCES})
ADD_LIBRARY("${DATAFORMAT_LIB}-static" STATIC ${LIB_SOURCES})
SET_TARGET_PROPERTIES("${DATAFORMAT_LIB}-static" PROPERTIES OUTPUT_NAME "${DATAFORMAT_LIB}")
SET_TARGET_PROPERTIES("${DATAFORMAT_LIB}-static" PROPERTIES PREFIX "lib")
SET_TARGET_PROPERTIES("${DATAFORMAT_LIB}" PROPERTIES SOVERSION "${VERSION_SOURCE}" VERSION "${PROJECT_VERSION}")

#add_dependencies(db pre_build)

ADD_SUBDIRECTORY(example)


